{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst formats_1 = require(\"./formats\");\n\nconst limit_1 = require(\"./limit\");\n\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nconst fullName = new codegen_1.Name(\"fullFormats\");\nconst fastName = new codegen_1.Name(\"fastFormats\");\n\nconst formatsPlugin = (ajv, opts = {\n  keywords: true\n}) => {\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, formats_1.fullFormats, fullName);\n    return ajv;\n  }\n\n  const [formats, exportName] = opts.mode === \"fast\" ? [formats_1.fastFormats, fastName] : [formats_1.fullFormats, fullName];\n  const list = opts.formats || formats_1.formatNames;\n  addFormats(ajv, list, formats, exportName);\n  if (opts.keywords) limit_1.default(ajv);\n  return ajv;\n};\n\nformatsPlugin.get = (name, mode = \"full\") => {\n  const formats = mode === \"fast\" ? formats_1.fastFormats : formats_1.fullFormats;\n  const f = formats[name];\n  if (!f) throw new Error(`Unknown format \"${name}\"`);\n  return f;\n};\n\nfunction addFormats(ajv, list, fs, exportName) {\n  var _a;\n\n  var _b;\n\n  (_a = (_b = ajv.opts.code).formats) !== null && _a !== void 0 ? _a : _b.formats = codegen_1._`require(\"ajv-formats/dist/formats\").${exportName}`;\n\n  for (const f of list) ajv.addFormat(f, fs[f]);\n}\n\nmodule.exports = exports = formatsPlugin;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatsPlugin;","map":null,"metadata":{},"sourceType":"script"}