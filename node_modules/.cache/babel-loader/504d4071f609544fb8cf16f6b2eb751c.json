{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u4EA2\\u6C5F\\u6797\\\\OneDrive\\\\\\u684C\\u9762\\\\card-builder\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { MenuFoldOutlined } from '@ant-design/icons';\nimport Displayer from './components/Displayer/displayer';\nimport Console from './components/Console/console';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport './App.scss';\n\nconst {\n  ipcRenderer\n} = window.require('electron');\n\nfunction App() {\n  const [isPopConsole, setIsPopConsole] = useState(false);\n  const [picList, setPicList] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Displayer, {\n    loadPic: picList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Console, {\n    isPop: isPopConsole,\n    onClose: () => {\n      setIsPopConsole(false);\n    },\n    onRemake: () => {\n      ipcRenderer.send('remake', JSON.stringify(picList));\n      setPicList([]);\n    },\n    onCreate: () => {\n      if (picList.length < 2) {\n        window.alert('请上传完整的图片数量！');\n      } else {\n        domtoimage.toBlob(window.document.getElementById('target-img')).then(function (blob) {\n          saveAs(blob, 'my_card.png');\n        });\n      }\n    } // 当文件数量达到2个后，继续上传文件不会再执行回调\n    ,\n    onFileUpload: file => {\n      const mFile = {\n        path: file.path,\n        name: file.name\n      };\n      if (picList.length < 2) setPicList(pre => {\n        ipcRenderer.send('cacheFile', JSON.stringify({\n          picList,\n          file: mFile\n        }));\n        return [...pre, mFile];\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-btn\",\n    icon: /*#__PURE__*/React.createElement(MenuFoldOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }),\n    onClick: () => {\n      setIsPopConsole(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/亢江林/OneDrive/桌面/card-builder/src/App.tsx"],"names":["React","useState","Row","Col","Button","MenuFoldOutlined","Displayer","Console","domtoimage","saveAs","ipcRenderer","window","require","App","isPopConsole","setIsPopConsole","picList","setPicList","send","JSON","stringify","length","alert","toBlob","document","getElementById","then","blob","file","mFile","path","name","pre"],"mappings":"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","sourcesContent":["import React ,{ useState } from 'react';\r\nimport { Row, Col, Button } from 'antd'\r\nimport { MenuFoldOutlined } from '@ant-design/icons';\r\nimport Displayer from './components/Displayer/displayer';\r\nimport Console from './components/Console/console';\r\nimport domtoimage from 'dom-to-image';\r\nimport { IFile } from './types';\r\nimport { saveAs } from 'file-saver';\r\nimport './App.scss';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nfunction App() {\r\n\r\n  const [isPopConsole, setIsPopConsole] = useState(false);\r\n  const [picList, setPicList] = useState<Pick<IFile, 'name' | 'path'>[]>([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Displayer\r\n            loadPic={picList}\r\n          />\r\n          <Console\r\n            isPop={isPopConsole}\r\n            onClose={() => {\r\n              setIsPopConsole(false);\r\n            }}\r\n            onRemake={() => {\r\n              ipcRenderer.send('remake', JSON.stringify(picList));\r\n              setPicList([]);\r\n            }}\r\n\r\n            onCreate={() => {\r\n              if (picList.length < 2) {\r\n                window.alert('请上传完整的图片数量！')\r\n              } else {\r\n                domtoimage.toBlob(window.document.getElementById('target-img') as any)\r\n                  .then(function (blob) {\r\n                    saveAs(blob, 'my_card.png');\r\n                  });\r\n              }\r\n            }}\r\n\r\n            // 当文件数量达到2个后，继续上传文件不会再执行回调\r\n            onFileUpload={(file) => {\r\n\r\n              const mFile = {\r\n                path: file.path,\r\n                name: file.name\r\n              }\r\n\r\n              if (picList.length < 2)\r\n                setPicList(pre => {\r\n                  ipcRenderer.send('cacheFile', JSON.stringify({\r\n                    picList,\r\n                    file: mFile\r\n                  }));\r\n                  return [...pre, mFile]\r\n                });\r\n\r\n            }}\r\n\r\n\r\n          />\r\n          <Button\r\n            className='float-btn'\r\n            icon={<MenuFoldOutlined />}\r\n            onClick={() => {\r\n              setIsPopConsole(true);\r\n            }}\r\n          >\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}