{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignDefaults = void 0;\n\nconst codegen_1 = require(\"../codegen\");\n\nconst util_1 = require(\"../util\");\n\nfunction assignDefaults(it, ty) {\n  const {\n    properties,\n    items\n  } = it.schema;\n\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default);\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i) => assignDefault(it, i, sch.default));\n  }\n}\n\nexports.assignDefaults = assignDefaults;\n\nfunction assignDefault(it, prop, defaultValue) {\n  const {\n    gen,\n    compositeRule,\n    data,\n    opts\n  } = it;\n  if (defaultValue === undefined) return;\n  const childData = codegen_1._`${data}${codegen_1.getProperty(prop)}`;\n\n  if (compositeRule) {\n    util_1.checkStrictMode(it, `default is ignored for: ${childData}`);\n    return;\n  }\n\n  let condition = codegen_1._`${childData} === undefined`;\n\n  if (opts.useDefaults === \"empty\") {\n    condition = codegen_1._`${condition} || ${childData} === null || ${childData} === \"\"`;\n  } // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n\n\n  gen.if(condition, codegen_1._`${childData} = ${codegen_1.stringify(defaultValue)}`);\n}","map":null,"metadata":{},"sourceType":"script"}