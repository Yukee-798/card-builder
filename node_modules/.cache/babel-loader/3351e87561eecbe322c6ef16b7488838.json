{"ast":null,"code":"\"use strict\";\n/* IMPORT */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fs = require(\"fs\");\n\nconst util_1 = require(\"util\");\n\nconst attemptify_1 = require(\"./attemptify\");\n\nconst fs_handlers_1 = require(\"./fs_handlers\");\n\nconst retryify_1 = require(\"./retryify\");\n/* FS */\n\n\nconst FS = {\n  chmodAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.chmod), fs_handlers_1.default.onChangeError),\n  chownAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.chown), fs_handlers_1.default.onChangeError),\n  closeAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.close)),\n  fsyncAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.fsync)),\n  mkdirAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.mkdir)),\n  realpathAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.realpath)),\n  statAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.stat)),\n  unlinkAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.unlink)),\n  closeRetry: retryify_1.retryifyAsync(util_1.promisify(fs.close), fs_handlers_1.default.isRetriableError),\n  fsyncRetry: retryify_1.retryifyAsync(util_1.promisify(fs.fsync), fs_handlers_1.default.isRetriableError),\n  openRetry: retryify_1.retryifyAsync(util_1.promisify(fs.open), fs_handlers_1.default.isRetriableError),\n  readFileRetry: retryify_1.retryifyAsync(util_1.promisify(fs.readFile), fs_handlers_1.default.isRetriableError),\n  renameRetry: retryify_1.retryifyAsync(util_1.promisify(fs.rename), fs_handlers_1.default.isRetriableError),\n  statRetry: retryify_1.retryifyAsync(util_1.promisify(fs.stat), fs_handlers_1.default.isRetriableError),\n  writeRetry: retryify_1.retryifyAsync(util_1.promisify(fs.write), fs_handlers_1.default.isRetriableError),\n  chmodSyncAttempt: attemptify_1.attemptifySync(fs.chmodSync, fs_handlers_1.default.onChangeError),\n  chownSyncAttempt: attemptify_1.attemptifySync(fs.chownSync, fs_handlers_1.default.onChangeError),\n  closeSyncAttempt: attemptify_1.attemptifySync(fs.closeSync),\n  mkdirSyncAttempt: attemptify_1.attemptifySync(fs.mkdirSync),\n  realpathSyncAttempt: attemptify_1.attemptifySync(fs.realpathSync),\n  statSyncAttempt: attemptify_1.attemptifySync(fs.statSync),\n  unlinkSyncAttempt: attemptify_1.attemptifySync(fs.unlinkSync),\n  closeSyncRetry: retryify_1.retryifySync(fs.closeSync, fs_handlers_1.default.isRetriableError),\n  fsyncSyncRetry: retryify_1.retryifySync(fs.fsyncSync, fs_handlers_1.default.isRetriableError),\n  openSyncRetry: retryify_1.retryifySync(fs.openSync, fs_handlers_1.default.isRetriableError),\n  readFileSyncRetry: retryify_1.retryifySync(fs.readFileSync, fs_handlers_1.default.isRetriableError),\n  renameSyncRetry: retryify_1.retryifySync(fs.renameSync, fs_handlers_1.default.isRetriableError),\n  statSyncRetry: retryify_1.retryifySync(fs.statSync, fs_handlers_1.default.isRetriableError),\n  writeSyncRetry: retryify_1.retryifySync(fs.writeSync, fs_handlers_1.default.isRetriableError)\n};\n/* EXPORT */\n\nexports.default = FS;","map":null,"metadata":{},"sourceType":"script"}