{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport RcMenu, { Divider, ItemGroup } from 'rc-menu';\nimport classNames from 'classnames';\nimport SubMenu from './SubMenu';\nimport Item from './MenuItem';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { SiderContext } from '../layout/Sider';\nimport collapseMotion from '../_util/motion';\nimport { cloneElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\n\nvar InternalMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalMenu, _React$Component);\n\n  var _super = _createSuper(InternalMenu);\n\n  function InternalMenu(props) {\n    var _this;\n\n    _classCallCheck(this, InternalMenu);\n\n    _this = _super.call(this, props);\n\n    _this.renderMenu = function (_ref) {\n      var getPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var rootPrefixCls = getPrefixCls();\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          theme = _this$props.theme,\n          expandIcon = _this$props.expandIcon;\n      var defaultMotions = {\n        horizontal: {\n          motionName: \"\".concat(rootPrefixCls, \"-slide-up\")\n        },\n        inline: collapseMotion,\n        other: {\n          motionName: \"\".concat(rootPrefixCls, \"-zoom-big\")\n        }\n      };\n      var prefixCls = getPrefixCls('menu', customizePrefixCls);\n      var menuClassName = classNames(\"\".concat(prefixCls, \"-\").concat(theme), _defineProperty({}, \"\".concat(prefixCls, \"-inline-collapsed\"), _this.getInlineCollapsed()), className);\n      return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n        value: {\n          inlineCollapsed: _this.getInlineCollapsed() || false,\n          antdMenuTheme: theme,\n          direction: direction\n        }\n      }, /*#__PURE__*/React.createElement(RcMenu, _extends({\n        getPopupContainer: getPopupContainer\n      }, _this.props, {\n        className: menuClassName,\n        prefixCls: prefixCls,\n        direction: direction,\n        defaultMotions: defaultMotions,\n        expandIcon: cloneElement(expandIcon, {\n          className: \"\".concat(prefixCls, \"-submenu-expand-icon\")\n        })\n      })));\n    };\n\n    devWarning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', '`inlineCollapsed` should only be used when `mode` is inline.');\n    devWarning(!(props.siderCollapsed !== undefined && 'inlineCollapsed' in props), 'Menu', '`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.');\n    return _this;\n  }\n\n  _createClass(InternalMenu, [{\n    key: \"getInlineCollapsed\",\n    value: function getInlineCollapsed() {\n      var _this$props2 = this.props,\n          inlineCollapsed = _this$props2.inlineCollapsed,\n          siderCollapsed = _this$props2.siderCollapsed;\n\n      if (siderCollapsed !== undefined) {\n        return siderCollapsed;\n      }\n\n      return inlineCollapsed;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderMenu);\n    }\n  }]);\n\n  return InternalMenu;\n}(React.Component);\n\nInternalMenu.defaultProps = {\n  className: '',\n  theme: 'light',\n  focusable: false\n}; // We should keep this as ref-able\n\nvar Menu = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Menu, _React$Component2);\n\n  var _super2 = _createSuper(Menu);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(SiderContext.Consumer, null, function (context) {\n        return /*#__PURE__*/React.createElement(InternalMenu, _extends({}, _this2.props, context));\n      });\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.Divider = Divider;\nMenu.Item = Item;\nMenu.SubMenu = SubMenu;\nMenu.ItemGroup = ItemGroup;\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}